#!/bin/bash 

############################################################################# 
# Source files
#############################################################################

source ~/.bash_profile
source includes/config
source includes/functions

############################################################################# 
# Functions
#############################################################################

# Push Workspace to in repository
if [ $1 = pushws ]; then
	
	#Usage check
	: ${2?"Usage: $0 $1 version-number"}
	
	pushws $2
	
	exit
fi

# Push ip to in repository
if [ $1 = puship ]; then
	
	#Usage check
	: ${2?"Usage: $0 $1 SITE version-number"}
	
	puship $2 $3
	
	exit
fi

# Flush ipcache
if [ $1 = flush_ipcache ]; then
	
	flush_ipcache
	
	exit
fi

############################################################################# 
# Get Opts
#############################################################################
usage()
{
cat << EOF
usage: $0 options

OPTIONS:
   -h      Show this message.
   -i      Define installation profile, default to ip if not specify.
   -m      Manual install mode (skip drush install).
   -z      Setup only Apache, Mysql, Drush alias & Host alias.
EOF
}
while getopts ":hi:mz" opt; do
  case $opt in

  	h)
		usage
		exit 1
	;;
	
    i)
		PROFILE=$OPTARG
		shift $((OPTIND-1))
	;;
	
    m)
		echo "Manual install mode" >&2
		MANUAL_INSTALL=1
		shift $((OPTIND-1))
	;;

	
    z)
		echo "Skip drupal (setup only Apache, Mysql, Drush alias & Host alias)" >&2
		SKIP_DRUPAL=1
		shift $((OPTIND-1))
	;;
		
    \?)
		echo "Invalid option: -$OPTARG" >&2
		exit 1
	;;
  esac
done

############################################################################# 
# Check usage
#############################################################################

#Usage check
: ${1?"Usage: $0 SITE"}


############################################################################# 
# Server info
#############################################################################

read -p "What is the actual domain of the website: " domain

############################################################################# 
# Check settings
#############################################################################


#Check vhost exist
if [ -f $APACHEDIR/other/$1.$SERVER.conf ]; then
  echo vhost $1.$SERVER is already existed
  exit
fi

#Check project directory exist
if [ -d $WWW/$1 ]; then
  echo Folder $1 is already existed
  exit
fi

#Check drush settings
if [ ! -d /Users/$USER/.drush ]; then
	mkdir /Users/$USER/.drush
fi

#Check sql-dump exist
if [ ! -d $WWW/sql_dump ]; then
	mkdir $WWW/sql_dump
fi

#Check tmp exist
if [ ! -d $WWW/tmp ]; then
	mkdir $WWW/tmp
fi

#Check db exist

read -s -p "Enter mysql root password: " rootpass

#Test mysql connection
while ! mysql -u root -p$rootpass  -e ";" ; do
       read -s -p "Can't connect, please retry: " rootpass
done
echo "";

check_db_exist $1_db $rootpass
db_exist=$?

if [ $db_exist = 1 ]; then	
	echo database $1_db alread exist
	exit
fi

############################################################################# 
# Setup vhost, host alias & drush alias
#############################################################################

#Add vhost
 echo "<VirtualHost *:80>
    DocumentRoot $WWW/$1/www
    ServerName $1.localhost
    <Directory $WWW/$1/www>
        AllowOverride All
    </Directory>
</VirtualHost>
" | sudo tee -a $APACHEDIR/other/$1.$SERVER.conf

sudo apachectl restart

#Add host alias
if [ ! $(grep -q "$1.$SERVER" /etc/hosts) ]; then
  echo -e "127.0.0.1	$1.$SERVER" | sudo tee -a /etc/hosts
fi

#Add drush alias
echo "<?php
\$aliases['$1'] = array(
    'uri' => '$1.$SERVER',
    'root' => '$WWW/$1/www',
	'path-aliases' => array(
		'%dump-dir' => '$WWW/sql_dump',
     ),
  );

\$aliases['$1.dev'] = array(
    'uri' => 'dev.$domain',
	'root' => '/home/$1/dev',
	'ssh-options' => '-p 222',
    'remote-host' => 'dev.$domain',
	'remote-user' => '$1',
	'path-aliases' => array(
		'%dump-dir' => '/home/$1/sql_dump',
     ),
  );

\$aliases['$1.live'] = array(
    'uri' => '$domain',
	'root' => '/home/$1/www',
	'ssh-options' => '-p 222',
    'remote-host' => '$domain',
	'remote-user' => '$1',
	'path-aliases' => array(
		'%dump-dir' => '/home/$1/sql_dump',
     ),
  );

" > /Users/$USER/.drush/$1.aliases.drushrc.php 

############################################################################# 
# Create database & user
#############################################################################


#Setup variables required
rand=$RANDOM

dbname=$1_db
dbuser=$1_user
dbpass=$(perl -e 'print crypt($ARGV[0], "password")' $rand | sed 's/\///g')
drupaluser='Site Admin'

#CREATE DB
mysqladmin -uroot -p$rootpass create $dbname;

echo domain: $domain
echo dbname: $dbname 
echo dbuser: $dbuser
echo dbpass: $dbpass

#CREATE USER
Q1="GRANT USAGE ON * . * TO  '$dbuser'@'localhost' IDENTIFIED BY  '$dbpass';" 
Q2="GRANT ALL PRIVILEGES ON $dbname.* TO '$dbuser'@'localhost' IDENTIFIED BY '$dbpass';"
SQL="${Q1}${Q2}"

mysql -uroot -p$rootpass -e "$SQL"

############################################################################# 
# Skip drupal
#############################################################################
if [ $SKIP_DRUPAL = 1 ]; then
	exit 1
fi

############################################################################# 
# Copy ip from ipcache
#############################################################################

branch=$PRESET_BRANCH

#in repos
repo=${REPOS[0]}

printf "%s = %s\n" 'Repo' $repo
printf "%s = %s\n" 'Branch' $branch

#if ipcache not exist, clone from github
if [ ! -d $WWW/ipcache ]; then
	echo Clone $branch branch
	git clone --branch $branch $repo $WWW/ipcache
	
	cd $WWW/ipcache
	git remote rename origin in
else

	cd $WWW/ipcache
	git co -b $branch repo/$branch
	git pull repo $branch

fi

if [ -n "$2" ]; then
	
	branch=$2

	
	#kw repos
	repo=${REPOS[1]}
		
	cd $WWW/ipcache
	git remote add kw $repo
	git pull kw $branch
	git co -b $branch kw/$branch
	
	git co $branch
	git pull kw	$branch
	
	git submodule init
	
	git submodule update
	
fi


cp -pRa $WWW/ipcache $WWW/$1

############################################################################# 
# Check ip version
#############################################################################
infofile=$WWW/$1/www/profiles/ip/ip.info
version=$(cat $infofile | grep "version"| awk '{ print $3 }')
version=$(echo $version | tr -d '"')



############################################################################# 
# Install drupal
#############################################################################

# Get ready for Drupal installation
chmod 755 $WWW/$1/www/sites/default

manual_install=$MANUAL_INSTALL
if [ $manual_install = 1 ]; then
	mkdir $WWW/$1/www/sites/default/files
	chmod 777 $WWW/$1/www/sites/default/files
	cp $WWW/$1/www/sites/default/default.settings.php $dd/sites/default/settings.php
	chmod 777 $WWW/$1/www/sites/default/settings.php
	chmod 777 $WWW/$1/www/sites/default/themes
	
	echo "Manual install"
	echo "$1.localhost"
	echo "Database $dbname created, $dbuser - $dbpass"
	
	exit
fi



#Drush install
if [ -n "$2" ]; then
	version=$2
fi

drush @$1 site-install $PROFILE --db-url=mysql://$dbuser:"$dbpass"@localhost/$dbname --account-name="$drupaluser" --account-pass=$dbpass --site-name="$1 - $version ($PROFILE)" -y

#Check if Drupal install successfully
status=$(drush @$1 status|grep "Drupal bootstrap"|awk '{ print $4 }')

if [ "$status" = "Successful" ]; then	
	
	#drupal directory
	dd=$(drush @$1 dd)

	#Make files directory writable
	chmod -R 777 `drush @$1 dd files`
	chmod 755 $dd/sites/default
	#chmod 755 $dd/sites/$1.$SERVER

	#Make everthing in files directory writable
	chmod -R 777 `drush @$1 dd files`

	#cp $WWW/$1/sites/default/settings.php $WWW/$1/sites/default/settings.live
	#sed 's/_db/_dev/' $WWW/$1/sites/default/settings.php > $WWW/$1/sites/default/settings.dev

	############################################################################# 
	# Theme config
	#############################################################################
	
	install_profile=$(drush @$1 vget install_profile |grep "install_profile"|awk '{ print $2 }')
	
	if [ $install_profile == '"ip"' ]; then
		
		#1. Enable omega_tools
		drush @$1 pm-enable omega_tools -y
		
		#2. Create new sub theme
		drush @$1 ipconfig_create_theme $1	

		#3. Settings for SCSS
		#copy config.rb
		cp $dd/profiles/ip/themes/zen/STARTERKIT/config.rb $dd/sites/default/themes/$1/


		mv $dd/sites/default/themes/$1/css $dd/sites/default/themes/$1/sass

		#mv *.css to *.scss
		mv $dd/sites/default/themes/$1/sass/global.css $dd/sites/default/themes/$1/sass/global.scss	
		mv $dd/sites/default/themes/$1/sass/$1-alpha-default-narrow.css $dd/sites/default/themes/$1/sass/$1-alpha-default-narrow.scss
		mv $dd/sites/default/themes/$1/sass/$1-alpha-default-normal.css $dd/sites/default/themes/$1/sass/$1-alpha-default-normal.scss
		mv $dd/sites/default/themes/$1/sass/$1-alpha-default-wide.css $dd/sites/default/themes/$1/sass/$1-alpha-default-wide.scss
		mv $dd/sites/default/themes/$1/sass/$1-alpha-default.css $dd/sites/default/themes/$1/sass/$1-alpha-default.scss

		mkdir $dd/sites/default/themes/$1/css


		#4. Pre-defined styles
		#_variables.scss
		cp $dd/profiles/ip/themes/scss/_variables.scss $dd/sites/default/themes/$1/sass/

		# add scaffold.scss
		cat $dd/profiles/ip/themes/scss/global.scss >> $dd/sites/default/themes/$1/sass/global.scss
		cat $dd/profiles/ip/themes/scss/scaffold.scss >> $dd/sites/default/themes/$1/sass/$1-alpha-default-narrow.scss
		cat $dd/profiles/ip/themes/scss/scaffold.scss >> $dd/sites/default/themes/$1/sass/$1-alpha-default-normal.scss
		cat $dd/profiles/ip/themes/scss/scaffold.scss >> $dd/sites/default/themes/$1/sass/$1-alpha-default-wide.scss
		cat $dd/profiles/ip/themes/scss/scaffold.scss >> $dd/sites/default/themes/$1/sass/$1-alpha-default.scss
		
		#5. Replace the log and site_name variable with delta blocks
		
		#theme settings: disable variable logo and site_name 
		drush @$1 ipconfig_theme_settings
		#enable site_block module: 
		drush @$1 ipconfig_enable_site_blocks
		
		#6. Run compass watch at the end. (script is located at the bottom of the file)
	fi
	
	drush @$1 cron
	
else
	
	#if not manual install, remove everything has been setup
	if [ $manual_install = 0 ]; then
		#remove db
		mysqladmin -uroot -p$rootpass -f DROP $dbname;
		echo $dbname is removed;

		#remove db user
		mysql -uroot -p$rootpass -e "DROP USER $dbuser@localhost;";
		echo User $dbuser is removed;	

		#remove vhost file
		sudo rm -f $APACHEDIR/other/$1.$SERVER.conf
		echo vhost removed.

		#remove site directory
		sudo rm -rf $WWW/$1
		echo site directory removed.

		#remove host alias
		sed "/$1.$SERVER/d" /etc/hosts > tmp/hosts
		sudo mv tmp/hosts /etc/hosts
		echo host alias removed.

		#remove drush alias
		rm -f /Users/$USER/.drush/$1.aliases.drushrc.php
		echo drush alias removed.

		#restart apache
		sudo apachectl restart
		echo apache restarted.
		
	fi
	
	echo Drupal fail to install.
		
	exit
fi


############################################################################# 
# Reports
#############################################################################

echo "Database $dbname created, $dbuser - $dbpass"
echo "Drupal was installed successfully: "
drush @$1 user-login;


if [ $install_profile == '"ip"' ]; then
	cd $dd/sites/default/themes/$1
	compass watch
fi