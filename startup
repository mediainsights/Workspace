#!/bin/bash 

############################################################################# 
# Source files
#############################################################################

source ~/.bash_profile
source includes/config
source includes/functions


############################################################################# 
# Check usage
#############################################################################

#Usage check
: ${1?"Usage: $0 SITE"}

############################################################################# 
# Functions
#############################################################################

# Push Workspace to in repository
if [ $1 = pushws ]; then
	
	#Usage check
	: ${2?"Usage: $0 $1 version-number"}
	
	pushws $2
	
	exit
fi

# Push ip to in repository
if [ $1 = puship ]; then
	
	#Usage check
	: ${2?"Usage: $0 $1 SITE version-number"}
	
	puship $2 $3
	
	exit
fi


# puship_test
if [ $1 = puship_test ]; then
	
	#Usage check
	: ${2?"Usage: $0 $1 SITE version-number"}
	
	puship_test $2 $3
	
	exit
fi


pre_startup $1 $2

############################################################################# 
# Copy ip from ipcache
#############################################################################

branch=$PRESET_BRANCH

#in repos
repo=${REPOS[0]}

printf "%s = %s\n" 'Repo' $repo
printf "%s = %s\n" 'Branch' $branch

#if ipcache not exist, clone from github
if [ ! -d $WWW/ipcache ]; then
	echo Clone $branch branch
	git clone --branch $branch $repo $WWW/ipcache
	
	cd $WWW/ipcache
	git remote rename origin in
else

	cd $WWW/ipcache
	git co $branch
	git pull

fi

if [ -n "$2" ]; then
	
	if [ "$2" = "dev" ]; then
		branch=master
	else
		branch=$2
	fi
	
	#kw repos
	repo=${REPOS[1]}
		
	cd $WWW/ipcache
	git remote add kw $repo
	git pull kw
	git co -b $branch kw/$branch
	
	git co $branch
	git pull kw	
fi


cp -pRa $WWW/ipcache $WWW/$1

############################################################################# 
# Check ip version
#############################################################################
infofile=$WWW/$1/profiles/ip/ip.info
version=$(cat $infofile | grep "version"| awk '{ print $3 }')
version=$(echo $version | tr -d '"')



############################################################################# 
# Install drupal
#############################################################################

# Get ready for Drupal installation
chmod 755 $WWW/$1/sites/default

manual_install=$MANUAL_INSTALL
if [ $manual_install = 1 ]; then
	mkdir $WWW/$1/sites/default/files
	chmod 777 $WWW/$1/sites/default/files
	cp $WWW/$1/sites/default/default.settings.php $WWW/$1/sites/default/settings.php
	chmod 777 $WWW/$1/sites/default/settings.php
	chmod 777 $WWW/$1/sites/default/themes
	
	echo "Manual install"
	echo "$1.localhost"
	echo "Database $dbname created, $dbuser - $dbpass"
	
	exit
fi



#Drush install
if [ -n "$2" ]; then
	if [ "$2" = "dev" ]; then
		drush @$1 site-install ip --db-url=mysql://$dbuser:"$dbpass"@localhost/$dbname --account-name="$drupaluser" --account-pass=$dbpass --site-name="$1 ($2)" -y
	else
		drush @$1 site-install $2 --db-url=mysql://$dbuser:"$dbpass"@localhost/$dbname --account-name="$drupaluser" --account-pass=$dbpass --site-name="$1 ($2)" -y
	fi
else
	drush @$1 site-install ip --db-url=mysql://$dbuser:"$dbpass"@localhost/$dbname --account-name="$drupaluser" --account-pass=$dbpass --site-name="$1 ($version)" -y
fi

#Check if Drupal install successfully
status=$(drush @$1 status|grep "Drupal bootstrap"|awk '{ print $4 }')

if [ "$status" = "Successful" ]; then	
	
	#drupal directory
	dd=$(drush @$1 dd)

	#Make files directory writable
	chmod -R 777 `drush @$1 dd files`
	chmod 755 $dd/sites/default
	#chmod 755 $dd/sites/$1.$SERVER

	#Make everthing in files directory writable
	chmod -R 777 `drush @$1 dd files`

	#cp $WWW/$1/sites/default/settings.php $WWW/$1/sites/default/settings.live
	#sed 's/_db/_dev/' $WWW/$1/sites/default/settings.php > $WWW/$1/sites/default/settings.dev

	#Theme config
	drush @$1 ipconfig_create_theme $1	
	drush @$1 ipconfig_theme_settings

	cp $dd/profiles/ip/themes/zen/STARTERKIT/config.rb $dd/sites/default/themes/$1/
	
	mv $dd/sites/default/themes/$1/css $dd/sites/default/themes/$1/sass
	
	mv $dd/sites/default/themes/$1/sass/global.css $dd/sites/default/themes/$1/sass/global.sass
	mv $dd/sites/default/themes/$1/sass/test2-alpha-default-narrow.css $dd/sites/default/themes/$1/sass/test2-alpha-default-narrow.sass
	mv $dd/sites/default/themes/$1/sass/test2-alpha-default-normal.css $dd/sites/default/themes/$1/sass/test2-alpha-default-normal.sass
	mv $dd/sites/default/themes/$1/sass/test2-alpha-default-wide.css $dd/sites/default/themes/$1/sass/test2-alpha-default-wide.sass
	mv $dd/sites/default/themes/$1/sass/test2-alpha-default.css $dd/sites/default/themes/$1/sass/test2-alpha-default.sass
	
	mkdir $dd/sites/default/themes/$1/css
	
	drush @$1 cron
else
	
	#if not manual install, remove everything has been setup
	if [ $manual_install = 0 ]; then
		#remove db
		mysqladmin -uroot -p$rootpass -f DROP $dbname;
		echo $dbname is removed;

		#remove db user
		mysql -uroot -p$rootpass -e "DROP USER $dbuser@localhost;";
		echo User $dbuser is removed;	

		#remove vhost file
		sudo rm -f $APACHEDIR/other/$1.$SERVER.conf
		echo vhost removed.

		#remove site directory
		sudo rm -rf $WWW/$1
		echo site directory removed.

		#remove host alias
		sed "/$1.$SERVER/d" /etc/hosts > tmp/hosts
		sudo mv tmp/hosts /etc/hosts
		echo host alias removed.

		#remove drush alias
		rm -f /Users/$USER/.drush/$1.aliases.drushrc.php
		echo drush alias removed.

		#restart apache
		sudo apachectl restart
		echo apache restarted.
		
	fi
	
	echo Drupal fail to install.
		
	exit
fi


############################################################################# 
# Reports
#############################################################################

echo "Database $dbname created, $dbuser - $dbpass"
echo "Drupal was installed successfully: "
drush @$1 user-login;