#!/bin/bash 

############################################################################# 
# Source files
#############################################################################
source includes/config

############################################################################# 
# Functions
#############################################################################

# Push Workspace to in repository
if [ "$1" = "pushws" ]; then
	
	#Usage check
	: ${2?"Usage: $0 $1 version-number"}
	
	pushws $2
	
	exit
fi

# Push ip to in repository
if [ "$1" = "puship" ]; then
	
	#Usage check
	: ${2?"Usage: $0 $1 SITE [dev | stage | live]"}
	
	if [[ "$3" != "dev" && "$3" != "stage" && "$3" != "live" ]]; then
		echo "Usage: $0 $1 SITE [dev | stage | live]"
		exit
	fi
	
	if [ "$3" == "live" ]; then
		read -p "Enter a version number: " version
		puship $2 $version
	else
		puship $2 $3
	fi
	
	exit
fi

# Flush ipcache
if [ "$1" = "flush_ipcache" ]; then
	
	flush_ipcache
	
	exit
fi

############################################################################# 
# Get Opts
#############################################################################
usage()
{
cat << EOF
usage: $0 options SITE

OPTIONS:
   -h      Show this message.
   -i      Define installation profile, default to ip if not specify.
   -m      Manual install mode (skip drush install).
   -z      Setup only Apache, Mysql, Drush alias & Host alias.
EOF
}
while getopts ":hi:mz" opt; do
  case $opt in

  	h)
		usage
		exit 1
	;;
	
    i)
		PROFILE=$OPTARG
		shift $((OPTIND-1))
	;;
	
    m)
		echo "Manual install mode" >&2
		MANUAL_INSTALL=1
		shift $((OPTIND-1))
	;;

	
    z)
		echo "Skip drupal (setup only Apache, Mysql, Drush alias & Host alias)" >&2
		SKIP_DRUPAL=1
		shift $((OPTIND-1))
	;;
		
    \?)
		echo "Invalid option: -$OPTARG" >&2
		exit 1
	;;
  esac
done


############################################################################# 
# Check usage
#############################################################################

#Usage check
: ${1?"Usage: $0 SITE"}


############################################################################# 
# Server info
#############################################################################

read -p "What is the actual domain of the website: " domain

if [ -z "$domain" ]; then
	domain=$1
fi

# Project directory
if [ "$OS" = "debian" ]; then
	PROJ_DIR=$WWW/local.$domain
elif [ "$OS" = "mac" ]; then
	PROJ_DIR=$WWW/$1
fi

############################################################################# 
# Check settings
#############################################################################


#Check vhost exist
if [ -f $VHOST/local.$domain.conf ]; then
  echo vhost local.$domain is already existed
  exit
fi

#Check project directory exist
if [ -d $PROJ_DIR ]; then
  echo Folder $PROJ_DIR is already existed
  exit
fi

#Check drush settings
if [ ! -d ~/.drush ]; then
	mkdir ~/.drush
fi

#Check sql-dump exist
if [ ! -d $WWW/sql_dump ]; then
	mkdir $WWW/sql_dump
fi

#Check tmp exist
if [ ! -d $WWW/tmp ]; then
	mkdir $WWW/tmp
fi

#Check host alias
if [ ! -z "$(grep local.$domain$ $HOSTS)" ]; then
	echo Host alias local.$domain already exist
	exit 1
fi

#Check db exist

#Test mysql connection
if ! mysql -u $MYSQL_USER  -e ";" ; then
	exit 1
fi
echo "";

check_db_exist $1_db
db_exist=$?

if [ $db_exist = 1 ]; then	
	echo database $1_db alread exist
	exit
fi


############################################################################# 
# Setup vhost, host alias & drush alias
#############################################################################

#Add vhost
sed s/SERVER_NAME/local.$domain/g includes/$VHOST_FILE > tmp
sed s,DOC_ROOT,"$PROJ_DIR/www",g tmp | sudo tee -a $VHOST/local.$1.conf

if [ "$OS" = "debian" ]; then
	sudo ln -s $VHOST/local.$1.conf $VHOST/../sites-enabled/local.$1.conf
fi
rm -rf tmp

$APACHE_RESTART

#Add host alias
if [ ! $(grep -q "local.$domain" $HOSTS) ]; then
  echo -e "$SERVER_IP	local.$domain" | sudo tee -a $HOSTS
fi

#Add drush alias
sed s/DOMAIN_NAME/$domain/g includes/$DRUSH_FILE > tmp
sed s/PROJECT_NAME/$1/g tmp > tmp2
sed s,WWW,$WWW,g tmp2 > tmp
cat tmp > ~/.drush/$1.aliases.drushrc.php
rm -rf tmp tmp2


############################################################################# 
# Create database & user
#############################################################################


#Setup variables required
rand=$RANDOM

dbname=$1_db
dbuser=$1_user
dbpass=$(perl -e 'print crypt($ARGV[0], "password")' $rand | sed 's/\///g')
drupaluser='Site Admin'

#CREATE DB
mysqladmin -u$MYSQL_USER create $dbname;

echo domain: $domain
echo dbname: $dbname 
echo dbuser: $dbuser
echo dbpass: $dbpass

#CREATE USER
Q1="GRANT USAGE ON * . * TO  '$dbuser'@'localhost' IDENTIFIED BY  '$dbpass';" 
Q2="GRANT ALL PRIVILEGES ON $dbname.* TO '$dbuser'@'localhost' IDENTIFIED BY '$dbpass';"
SQL="${Q1}${Q2}"

mysql -u$MYSQL_USER -e "$SQL"


############################################################################# 
# Skip drupal
#############################################################################
if [ $SKIP_DRUPAL = 1 ]; then
	exit 1
fi

############################################################################# 
# Copy ip from ipcache
#############################################################################

branch=$PRESET_BRANCH

#in repos
repo=${REPOS[0]}

printf "%s = %s\n" 'Repo' $repo
printf "%s = %s\n" 'Branch' $branch

#if ipcache not exist, clone from github
if [ ! -d $WWW/ipcache ]; then
	flush_ipcache
else
	
	cd $WWW/ipcache
	
	git fetch in
	
	git checkout -b $branch in/$branch
	git checkout $branch
	git reset --hard HEAD
	git pull in $branch

fi

if [ -n "$2" ]; then
	
	branch=$2
	
	#kw repos
	repo=${REPOS[1]}
		
	cd $WWW/ipcache
	git remote add kw $repo	
		
	git fetch kw
	
	git checkout -b $branch kw/$branch
	git checkout $branch
	
	git reset --hard HEAD	
	git pull kw $branch

	
fi

cp -pRa $WWW/ipcache $PROJ_DIR


############################################################################# 
# Check ip version
#############################################################################
infofile=$PROJ_DIR/www/profiles/ip/ip.info
version=$(cat $infofile | grep "version"| awk '{ print $3 }')
version=$(echo $version | tr -d '"')



############################################################################# 
# Install drupal
#############################################################################

# Get ready for Drupal installation
chmod 755 $PROJ_DIR/www/sites/default

manual_install=$MANUAL_INSTALL
if [ $manual_install = 1 ]; then
	mkdir $PROJ_DIR/www/sites/default/files
	chmod 777 $PROJ_DIR/www/sites/default/files
	cp $PROJ_DIR/www/sites/default/default.settings.php $PROJ_DIR/www/sites/default/settings.php
	chmod 777 $PROJ_DIR/www/sites/default/settings.php
	chmod 777 $PROJ_DIR/www/sites/default/themes
	
	echo "Manual install"
	echo "localhost.$domain:8080"
	echo "Database $dbname created, $dbuser - $dbpass"
	
	exit
fi



#Drush install
if [ -n "$2" ]; then
	version=$2
fi

if [ "$PROFILE" = "unimelb" ]; then
	drush @$1 site-install ip --db-url=mysql://$dbuser:"$dbpass"@localhost/$dbname --account-name="$drupaluser" --account-pass=$dbpass --site-name="$1 - $version ($PROFILE)" -y
	
elif [ -d $PROJ_DIR/www/profiles/$PROFILE ]; then
	drush @$1 site-install $PROFILE --db-url=mysql://$dbuser:"$dbpass"@localhost/$dbname --account-name="$drupaluser" --account-pass=$dbpass --site-name="$1 - $version ($PROFILE)" -y
fi

#Check if Drupal install successfully
status=$(drush @$1 status|grep "Drupal bootstrap"|awk '{ print $4 }')

echo $status

if [ "$status" = "Successful" ]; then	
	
	#drupal directory
	dd=$(drush @$1 dd)

	#Make files directory writable
	chmod -R 777 `drush @$1 dd files`
	chmod 755 $dd/sites/default

	#Make everthing in files directory writable
	chmod -R 777 `drush @$1 dd files`

	#cp $PROJ_DIR/sites/default/settings.php $PROJ_DIR/sites/default/settings.live
	#sed 's/_db/_dev/' $PROJ_DIR/sites/default/settings.php > $PROJ_DIR/sites/default/settings.dev

	############################################################################# 
	# Unimelb config
	#############################################################################
	if [ "$PROFILE" = "unimelb" ]; then
		drush @$1 pm-enable unimelb_config -y
		
	fi

	
	drush @$1 cron
	
else
	
	#if not manual install, remove everything has been setup
	if [ $manual_install = 0 ]; then
		#remove db
		mysqladmin -u$MYSQL_USER -f DROP $dbname;
		echo $dbname is removed;

		#remove db user
		mysql -u$MYSQL_USER -e "DROP USER $dbuser@localhost;";
		echo User $dbuser is removed;	

		#remove vhost file
		sudo rm -f $VHOST/local.$1.conf
		if [ "$OS" = "debian" ]; then
			sudo rm -f $VHOST/../sites-enabled/local.$1.conf
		fi
		echo vhost removed.

		#remove site directory
		sudo rm -rf $PROJ_DIR
		echo site directory removed.

		#remove host alias
		echo $HOSTS
		sed "/local.$1/d" $HOSTS | sudo tee $HOSTS > tmp
		rm -f tmp
		echo host alias removed.

		#remove drush alias
		rm -f ~/.drush/$1.aliases.drushrc.php
		echo drush alias removed.

		#restart apache
		$APACHE_RESTART
		echo apache restarted.
		
	fi
	
	echo Drupal fail to install.
		
	exit
fi


############################################################################# 
# Reports
#############################################################################

echo "Database $dbname created, $dbuser - $dbpass"
echo "Drupal was installed successfully: "
drush @$1 user-login;