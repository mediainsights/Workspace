#!/bin/bash 

############################################################################# 
# Source files
#############################################################################

source ~/.bash_profile
source includes/config
source includes/functions

############################################################################# 
# Push Workspace to in repository
#############################################################################

if [ $1="pushws" ]; then
	
	#Usage check
	: ${2?"Usage: $0 $1 version number"}
	
	pushws $2
	
	exit
fi

############################################################################# 
# Check usage and platform settings
#############################################################################

#Usage check
: ${1?"Usage: $0 SITE"}

#Check vhost exist
if [ -f $APACHEDIR/other/$1.$SERVER.conf ]; then
  echo vhost $1.$SERVER is already existed
  exit
fi

#Check project directory exist
if [ -d $WWW/$1 ]; then
  echo Folder $1 is already existed
  exit
fi

#Check drush settings
if [ ! -d /Users/$USER/.drush ]; then
	echo ".drush folder not found"
	exit
fi

#Check db exist
if [ check_db_exist $1_db ]; then	
	echo database $1_db alread exist
	exit
fi

############################################################################# 
# Find out the repository to download
############################################################################# 


if [ $2=dev ]; then
	repo_index=1
else
	repo_index=0
fi

#Load preset value
branch=$PRESET_BRANCH
repo=${REPOS[$repo_index]}

printf "%s = %s\n" 'Repo' $repo
printf "%s = %s\n" 'Branch' $branch

############################################################################# 
# Server info
#############################################################################

read -p "What is the actual domain of the website: " domain

############################################################################# 
# Setup vhost, host alias & drush alias
#############################################################################

#Add vhost
 echo "<VirtualHost *:80>
    DocumentRoot $WWW/$1 
    ServerName $1.localhost
    <Directory $WWW/$1>
        AllowOverride All
    </Directory>
</VirtualHost>
" | sudo tee -a $APACHEDIR/other/$1.$SERVER.conf

sudo apachectl restart

#Add host alias
if [ ! $(grep -q "$1.$SERVER" /etc/hosts) ]; then
  echo -e "127.0.0.1	$1.$SERVER" | sudo tee -a /etc/hosts
fi

#Add drush alias
echo "<?php
\$aliases['$1'] = array(
    'uri' => '$1.$SERVER',
    'root' => '$WWW/$1',
  );

\$aliases['$1.dev'] = array(
    'uri' => 'dev.$domain',
	'root' => '/home/$1/dev',
	'ssh-options' => '-p 222',
    'remote-host' => 'dev.$domain',
	'remote-user' => '$1',
	'path-aliases' => array(
		'%dump-dir' => '/home/$1/sql_dump',
     ),
  );

\$aliases['$1.live'] = array(
    'uri' => '$domain',
	'root' => '/home/$1/www',
	'ssh-options' => '-p 222',
    'remote-host' => '$domain',
	'remote-user' => '$1',
	'path-aliases' => array(
		'%dump-dir' => '/home/$1/sql_dump',
     ),
  );

" > /Users/$USER/.drush/$1.aliases.drushrc.php 

############################################################################# 
# Create database & user
#############################################################################

read -s -p "Enter mysql root password: " rootpass

#Test mysql connection
while ! mysql -u root -p$rootpass  -e ";" ; do
       read -s -p "Can't connect, please retry: " rootpass
done

echo "";

#Setup variables required
rand=$RANDOM

dbname=$1_db
dbuser=$1_user
dbpass=$(perl -e 'print crypt($ARGV[0], "password")' $rand | sed 's/\///g')
drupaluser='Site Admin'

#Check if db exists
n=1
while [ `check_db_exist $dbname` = 1 ]; do
	dbname=$1_db$n
	dbuser=$1_user$n
	let n+=1
done

#CREATE DB
mysqladmin -uroot -p$rootpass create $dbname;
echo "Database $dbname created, $dbpass"

#CREATE USER
Q1="GRANT USAGE ON * . * TO  '$dbuser'@'localhost' IDENTIFIED BY  '$dbpass';" 
Q2="GRANT ALL PRIVILEGES ON $dbname.* TO '$dbuser'@'localhost' IDENTIFIED BY '$dbpass';"
SQL="${Q1}${Q2}"

mysql -uroot -p$rootpass -e "$SQL"

############################################################################# 
# Copy ip from ipcache
#############################################################################

#if ipcache not exist, clone from github
if [ ! -d $WWW/ipcache ]; then
	echo Clone $branch branch
	git clone --branch $branch $repo $WWW/ipcache	
	
else
	cd $WWW/ipcache
	git pull
fi

cp -pRa $WWW/ipcache $WWW/$1

############################################################################# 
# Install drupal
#############################################################################

# Get ready for Drupal installation
chmod 755 $WWW/$1/sites/default

manual_install=0
#Extra settings for manual druapl install
#manual_install=1
#mkdir $WWW/$1/sites/default/files
#chmod 777 $WWW/$1/sites/default/files
#cp $WWW/$1/sites/default/default.settings.php $WWW/$1/sites/default/settings.php
#chmod 777 $WWW/$1/sites/default/settings.php

#Drush install
drush @$1 site-install ip --db-url=mysql://$dbuser:"$dbpass"@localhost/$dbname --account-name="$drupaluser" --account-pass=$dbpass -y

#Check if Drupal install successfully
status=$(drush @$1 status|grep "Drupal bootstrap"|awk '{ print $4 }')

if [ "$status" = "Successful" ]; then	
	
	#drupal directory
	dd=$(drush @$1 dd)

	#Make files directory writable
	chmod -R 777 `drush @$1 dd files`
	chmod 755 $dd/sites/default
	chmod 755 $dd/sites/$1.$SERVER

	#Make everthing in files directory writable
	chmod -R 777 `drush @$1 dd files`

	cp $WWW/$1/sites/default/settings.php $WWW/$1/sites/default/settings.live
	sed 's/_db/_dev/' $WWW/$1/sites/default/settings.php > $WWW/$1/sites/default/settings.dev

	drush @$1 cron
else
	
	#if not manual install, remove everything has been setup
	if [ $manual_install = 0 ]; then
		#remove db
		mysqladmin -uroot -p$rootpass -f DROP $dbname;
		echo $dbname is removed;

		#remove db user
		mysql -uroot -p$rootpass -e "DROP USER $dbuser@localhost;";
		echo User $dbuser is removed;	

		#remove vhost file
		sudo rm -f $APACHEDIR/other/$1.$SERVER.conf
		echo vhost removed.

		#remove site directory
		sudo rm -rf $WWW/$1
		echo site directory removed.

		#remove host alias
		sed "/$1.$SERVER/d" /etc/hosts > tmp/hosts
		sudo mv tmp/hosts /etc/hosts
		echo host alias removed.

		#remove drush alias
		rm -f /Users/$USER/.drush/$1.aliases.drushrc.php
		echo drush alias removed.

		#restart apache
		sudo apachectl restart
		echo apache restarted.
		
	fi
	
	echo Drupal fail to install.
		
	exit
fi


############################################################################# 
# Reports
#############################################################################

echo "Database created: $dbname, $dbpass"
echo "Drupal was installed successfully: "
drush @$1 user-login;

