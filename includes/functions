#!/bin/bash

function check_db_exist {
	DBS=`mysql -uroot -p$2 -Bse 'show databases'| egrep -v 'information_schema|mysql'`
	for db in $DBS; do
		if [ "$db" = $1 ]; then
			return 1
		fi
	done

	return 0

}


#push workspace
function pushws {
	
	if [ "$1" = "dev" ]; then
		git co dev
		git push kw dev
				
	elif [ "$1" = "stage" ]; then
	
		git co dev
		git push kw dev
	
		git co dev
		git push kw dev
		
		git co stage		
		git pull kw stage
		
		git merge dev
		
		git reset kw/stage
		
		git add .
		git add -u

		git commit
		
		git push kw stage
		
		git co dev
		
		git merge stage
		
	else
	
		git co stage

		git tag -a $1 -m 'VERSION $1'

		git push kw stage

		git push --tags kw

		git co master
		git pull in master

		git merge stage

		git push in master

		git push --tags in

		git co dev

		git merge stage
		
		git push kw dev
	fi
} 

#push ip
function puship {
	
	#Check project directory exist
	if [ ! -d $WWW/$1 ]; then
	  echo Folder $1 is not existed
	  exit
	fi
	
	cd $WWW/$1
	
	if [ "$2" = "dev" ]; then
		git co dev
		git push kw dev
				
	elif [ "$2" = "stage" ]; then
		
		git co dev
		git push kw dev
		
		git co stage		
		git pull kw stage
		
		git merge dev
		
		git reset kw/stage
		
		git add .
		git add -u

		git commit
		
		git push -f kw stage
		
		git co dev
		
		git merge stage
		
	else
		git co stage
		update_info_version $1 $2

		update_ip_update_info_version $1 $2

		update_ip_config_info_version $1 $2
		
		update_version_txt $1 $2
		
		echo VERSION $2 > CHANGELOG.txt
		echo >> CHANGELOG.txt
		
		git log --pretty=%s --since=28/3/2012 --format=%B --no-merges >> CHANGELOG.txt

		git commit -am 'VERSION '$2

		git tag -a $2 -m 'VERSION $2'

		git push kw stage
		
		git push --tags kw	

		git co $PRESET_BRANCH
		
		git merge stage
		
		git push -f in $PRESET_BRANCH

		git push --tags in

		git co dev

		git merge stage
		
		git push kw dev

		
	fi
		
}


function update_info_version {
	
	infofile=$(drush @$1 dd)/profiles/ip/ip.info

	version=$(cat $infofile | grep "version"| awk '{ print $3 }')
	
	sed 's/'$version'/"'$2'"/g' $infofile > tmp
	mv tmp $infofile
	
	rm -f tmp
}


function update_ip_update_info_version {
	
	infofile=$(drush @$1 dd)/profiles/ip/modules/ip_update/ip_update.info

	version=$(cat $infofile | grep "version"| awk '{ print $3 }')
	
	sed 's/'$version'/"'$2'"/g' $infofile > tmp
	mv tmp $infofile
	
	rm -f tmp
}

function update_ip_config_info_version {
	
	infofile=$(drush @$1 dd)/profiles/ip/modules/ip_config/ip_config.info

	version=$(cat $infofile | grep "version"| awk '{ print $3 }')
	
	sed 's/'$version'/"'$2'"/g' $infofile > tmp
	mv tmp $infofile
	
	rm -f tmp
}

function update_version_txt {
	echo $2 > $(drush @$1 dd)/../VERSION.txt
}

function flush_ipcache {

	source includes/config

	rm -rf $WWW/ipcache
	
	git clone git@github.com:mediainsights/IP.git $WWW/ipcache
	
	cd $WWW/ipcache
	
	git remote rename origin in
	
	git remote add kw git@github.com:KelvinWong/IP.git
	
	git fetch kw
	
	git co -b dev kw/dev
	
	git co -b $PRESET_BRANCH in/$PRESET_BRANCH
	
	
}



