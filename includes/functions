#!/bin/bash

function check_db_exist {
	DBS=`mysql -uroot -p$2 -Bse 'show databases'| egrep -v 'information_schema|mysql'`
	for db in $DBS; do
		if [ "$db" = $1 ]; then
			return 1
		fi
	done

	return 0

}


#push workspace
function pushws {
	
	git co kelvin
	
	#git add .
	#git add -u
	
	#git commit
	
	git tag -a $1 -m 'version $1'
	
	git push kw kelvin

	git push --tags kw

	git co master
	git pull in master
	
	git merge kelvin
	
	git reset in/master
	
	git add .
	git add -u
	
	git commit
	
	git push in master
	
	git push --tags in
	
	git co kelvin
	
	git merge master
} 

#push ip
function puship {
	
	#Check project directory exist
	if [ ! -d $WWW/$1 ]; then
	  echo Folder $1 is not existed
	  exit
	fi
	
	cd $WWW/$1
	
	if [ "$2" = "dev" ]; then
		git co master
		git push kw master
		
	elif [ "$2" = "unimelb" ]; then
		git co unimelb
		git push kw unimelb
		
	elif [ "$2" = "stage" ]; then
		
		git co master
		git push kw master
		
		git co stage
		git pull kw stage
		
		git merge master
		
		git reset kw/stage
		
		git add .
		git add -u

		git commit
		
		git push kw stage
		
		git co master
		
		git merge stage
		
	else
		git co master
		update_info_version $1 $2

		update_ip_update_info_version $1 $2

		update_ip_config_info_version $1 $2

		git commit -am 'version '$2

		git tag -a $2 -m 'version $2'

		git push kw master

		git push --tags kw	

		git co $PRESET_BRANCH
		git pull in $PRESET_BRANCH

		git merge master

		git reset in/$PRESET_BRANCH

		git add .
		git add -u

		git commit

		git push in $PRESET_BRANCH

		git push --tags in

		git co master

		git merge $PRESET_BRANCH
		
	fi
		
}


function update_info_version {
	
	infofile=$(drush @$1 dd)/profiles/ip/ip.info

	version=$(cat $infofile | grep "version"| awk '{ print $3 }')
	
	sed 's/'$version'/"'$2'"/g' $infofile > tmp
	mv tmp $infofile
	
	rm -f tmp
}


function update_ip_update_info_version {
	
	infofile=$(drush @$1 dd)/profiles/ip/modules/developer/ip_update/ip_update.info

	version=$(cat $infofile | grep "version"| awk '{ print $3 }')
	
	sed 's/'$version'/"'$2'"/g' $infofile > tmp
	mv tmp $infofile
	
	rm -f tmp
}

function update_ip_config_info_version {
	
	infofile=$(drush @$1 dd)/profiles/ip/modules/developer/ip_config/ip_config.info

	version=$(cat $infofile | grep "version"| awk '{ print $3 }')
	
	sed 's/'$version'/"'$2'"/g' $infofile > tmp
	mv tmp $infofile
	
	rm -f tmp
}



